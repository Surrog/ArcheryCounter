cmake_minimum_required (VERSION 3.2)

project (archerycounter)

include_directories("${PROJECT_SOURCE_DIR}")

if (WIN32)
add_definitions(/std:c++latest)
add_definitions(/permissive-)
else (WIN32)
add_definitions(-std=c++17)
endif(WIN32)

set(OpenCV_DIR "${PROJECT_SOURCE_DIR}/bin" CACHE PATH "The directory where OpenCV was generated by cmake")

find_package( OpenCV REQUIRED )
find_package( Threads REQUIRED )
include_directories( ${OpenCV_INCLUDE_DIRS} )

set(IMAGE_DIRECTORY "${PROJECT_SOURCE_DIR}/Images/")

configure_file( "${PROJECT_SOURCE_DIR}/sources.hpp.in"
				"${PROJECT_SOURCE_DIR}/sources.hpp")


# sources in the resolver_server directory
set (SOURCES 
	${PROJECT_SOURCE_DIR}/main.cpp
	${PROJECT_SOURCE_DIR}/sources.hpp
	${PROJECT_SOURCE_DIR}/math_utils.hpp
	${PROJECT_SOURCE_DIR}/pretreatment.hpp
	${PROJECT_SOURCE_DIR}/pretreatment.cpp

	${PROJECT_SOURCE_DIR}/colour_filters.hpp
	${PROJECT_SOURCE_DIR}/colour_filters.cpp
	${PROJECT_SOURCE_DIR}/keypoint_approach.hpp
	${PROJECT_SOURCE_DIR}/keypoint_approach.cpp
	${PROJECT_SOURCE_DIR}/hough_approach.hpp
	${PROJECT_SOURCE_DIR}/hough_approach.cpp
	${PROJECT_SOURCE_DIR}/histo_approach.hpp
	${PROJECT_SOURCE_DIR}/histo_approach.cpp
	${PROJECT_SOURCE_DIR}/ellispes_approach.hpp
	${PROJECT_SOURCE_DIR}/ellispes_approach.cpp
	${PROJECT_SOURCE_DIR}/NN_approach.hpp
	)

add_executable(ArcheryCounter ${SOURCES})
target_link_libraries( ArcheryCounter ${OpenCV_LIBS} Threads::Threads)